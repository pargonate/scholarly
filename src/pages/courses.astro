---
// Route Protection (Server)
import { protectRoute } from "../lib/auth.ts";
const result = await protectRoute(Astro);

if (result.redirect) {
	return Astro.redirect(result.redirect);
}

// Server-Client 
import Layout from "../layouts/Layout.astro";
import { Icon } from "astro-icon/components";

let courses = []

try {
	const response = await fetch(`${import.meta.env.SERVER_URL}/api/courses`);
	courses = await response.json();
} catch (error) {
	console.log(`ðŸ›‘ Supabase failed to GET: ${error}`);
}
---

<Layout title="Courses" description="See all courses">
	<table>
		<thead>
			<tr>
				<th>Name</th>
				<th>Teacher</th>
				<th>Subject</th>
				<th>Description</th>
				<th>Credits</th>
			</tr>
		</thead>
		<tbody>
			{courses.map((course) => (
				<tr>
					<td>
						<div id="courseName-wrapper">
							{course.name} ({course.course_id})
							<div id="courseControls">
								{/* 
									Since editing isn't an immediate action (unlike delete),
									we send the user to the backend-enabled form /composer.
								*/}
								<a href={`/composer?mode=modify&id=${course.course_id}`} class="courseControl">
									<Icon name="ri:pencil-fill" />
								</a>
								<button class="courseDelete courseControl" data-courseID={course.course_id} data-courseName={course.name}>
									<Icon name="ri:delete-bin-5-line" />
								</button>
							</div>
						</div>
					</td>
					<td>{course.creator_name}</td>
					<td>{course.subject}</td>
					<td>{course.description}</td>
					<td>{course.credits}</td>
				</tr>
			))}
		</tbody>
	</table>	
	<a href="/composer"><button>Create a Course (TEACHERS ONLY!)</button></a>
</Layout>
<style>
	table {
		border-collapse: collapse;
		width: 100%;
		color: #FFF;
	}

	th,
	td {
		border: 1px solid #000;
		padding: 8px;
		/* width: fit-content; */
	}

	#courseName-wrapper {
		display: flex;
		gap: 15px;
	}

		#courseControls {
			display: flex;
			align-items: center;
			justify-content: center;
			gap: 5px;
		}

	.courseControl {
		all: unset;
		line-height: 0px;
		cursor: pointer;
	}

	th {
		background-color: #0a0a0a;
		text-align: left;
	}
</style>